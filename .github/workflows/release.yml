name: Semantic Release

on:
    issues:
      types: [opened]
  
  jobs:
    deployJob:
      name: Deployment
      runs-on: ubuntu-latest
      # Only run this deployment if the newly opened issue's title starts with 'Release new version'
  jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, 'Release new version')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Verify release permissions 
      uses: actions/github-script@0.9.0
      env:
        GITHUB_RUN_ID: ${{github.run_id}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          await github.repos.getCollaboratorPermissionLevel({
            owner: context.repo.owner,
            repo: context.repo.repo,
            username: context.actor. 
          })
#    - name: Python Semantic Release
#      uses: relekang/python-semantic-release@master
#      with:
#        github_token: ${{ secrets.GITHUB_TOKEN }}
#        pypi_username: zaner 
#        pypi_password: ${{ secrets.PYPI_PASSWORD }}
    - name: Close release triggering issue
      uses: actions/github-script@0.9.0
      env:
        GITHUB_RUN_ID: ${{github.run_id}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          await github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Successfully released project'
          })
          await github.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['released']
          })
          await github.issues.update({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'closed'
          })
